#----------------------------------------------------------------------
#
# This file sets the library information needed in CPPFLAGS and LDFLAGS
# for the gbpCode Makefile
#
# YOU REALLY SHOULDN'T NEED TO EDIT THIS FILE!  ANY PROBLEMS
# ARE BEING CAUSED ELSEWHERE ... MOST LIKELY IN YOUR 
# .bashrc.myCode OR .cshrc.myCode FILES.
#
#----------------------------------------------------------------------

# Add Intel math library
ifndef USE_INTEL_MATH
  USE_INTEL_MATH=0
endif
ifneq ($(USE_INTEL_MATH),0)
  LDFLAGS := $(LDFLAGS) -limf
endif
export USE_INTEL_MATH

# Add cfitsio
ifndef USE_CFITSIO
  USE_CFITSIO    =0
endif
ifneq ($(USE_CFITSIO),0)
  ifdef GBP_CFITSIO_DIR
    CPPFLAGS := $(CPPFLAGS) -I$(GBP_CFITSIO_DIR)/include/
    LDFLAGS := $(LDFLAGS) -L$(GBP_CFITSIO_DIR)/lib/
  endif
  LIBS    := $(LIBS) -lcfitsio
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_CFITSIO=$(USE_CFITSIO)
export USE_CFITSIO

# Add hdf5
ifndef USE_HDF5
  USE_HDF5    =0
endif
ifneq ($(USE_HDF5),0)
  ifdef GBP_HDF5_DIR
    CPPFLAGS := $(CPPFLAGS) -I$(GBP_HDF5_DIR)/include/
    LDFLAGS := $(LDFLAGS) -L$(GBP_HDF5_DIR)/lib/
  endif
  LIBS    := $(LIBS) -lhdf5
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_HDF5=$(USE_HDF5)
export USE_HDF5

# Add gdlib
ifndef USE_GDLIB
  USE_GDLIB=0
endif
ifneq ($(USE_GDLIB),0)
  ifdef GBP_GDLIB_DIR
    CPPFLAGS := $(CPPFLAGS) -I$(GBP_GDLIB_DIR)/include/
    LDFLAGS := $(LDFLAGS) -L$(GBP_GDLIB_DIR)/lib/
  endif
  LIBS    := $(LIBS) -lgd -lpng -lz
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_GDLIB=$(USE_GDLIB)
export USE_GDLIB

# Add Cuda
ifndef USE_CUDA
  USE_CUDA    =0
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_CUDA=$(USE_CUDA)
export USE_CUDA

# Add debugger support
ifndef USE_DEBUGGER
  USE_DEBUGGER    =0
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_DEBUGGER=$(USE_DEBUGGER)
export USE_DEBUGGER

# Add valgrind
ifndef USE_VALGRIND
  USE_VALGRIND    =0
endif
ifneq ($(USE_VALGRIND),0)
  ifdef GBP_VALGRIND_DIR
    CPPFLAGS := $(CPPFLAGS) -I$(GBP_VALGRIND_DIR)/include/
    LDFLAGS := $(LDFLAGS) -L$(GBP_VALGRIND_DIR)/lib/
  endif
  LIBS    := $(LIBS) 
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_VALGRIND=$(USE_VALGRIND)
export USE_VALGRIND

# Add GSL stuff (default off)
ifndef USE_GSL
  USE_GSL=0
endif
ifneq ($(USE_GSL),0)
  ifdef GBP_GSL_DIR
    CPPFLAGS := $(CPPFLAGS) -I$(GBP_GSL_DIR)/include/
    LDFLAGS := $(LDFLAGS) -L$(GBP_GSL_DIR)/lib/ 
  endif
  LIBS    := $(LIBS) -lgsl -lgslcblas -lm 
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_GSL=$(USE_GSL)
export USE_GSL

# Add FFTW (fast Fourier transform) stuff (default off)
ifndef USE_FFTW
  USE_FFTW=0
endif
ifneq ($(USE_FFTW),0)
  ifneq ($(USE_MPI),0)
    ifdef GBP_FFTW_DIR
      CPPFLAGS := $(CPPFLAGS) -I$(GBP_FFTW_DIR)/include
      LDFLAGS := $(LDFLAGS) -L$(GBP_FFTW_DIR)/lib
    endif
    ifeq ($(USE_DOUBLE),0)
      LIBS  := $(LIBS) -lsrfftw_mpi -lsfftw_mpi -lsrfftw -lsfftw
    else
      LIBS  := $(LIBS) -ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw
    endif
  else
    ifdef GBP_FFTW_DIR
      CPPFLAGS := $(CPPFLAGS) -I$(GBP_FFTW_DIR)/include
      LDFLAGS := $(LDFLAGS) -L$(GBP_FFTW_DIR)/lib
    endif
    ifeq ($(USE_DOUBLE),0)
      LIBS  := $(LIBS) -lsrfftw -lsfftw
    else
      LIBS  := $(LIBS) -ldrfftw -ldfftw
    endif
  endif
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_FFTW=$(USE_FFTW)
export USE_FFTW

# SPRNG (parallel random number generator) stuff (default off)
ifndef USE_SPRNG
  USE_SPRNG=0
endif
ifneq ($(USE_SPRNG),0)
  ifdef GBP_SPRNG_DIR
    CPPFLAGS := $(CPPFLAGS) -I$(GBP_SPRNG_DIR)/include
    LDFLAGS := $(LDFLAGS) -L$(GBP_SPRNG_DIR)/lib
  endif
  LIBS    := $(LIBS) -llcg
  CPPFLAGS := $(CPPFLAGS) 
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_SPRNG=$(USE_SPRNG)
export USE_SPRNG

# Set default MPI support
ifndef USE_MPI
  USE_MPI=0
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_MPI=$(USE_MPI)
export USE_MPI

# Set default MPI-IO support
ifndef USE_MPI_IO
  USE_MPI_IO=0
endif
CPPFLAGS := $(CPPFLAGS) -DUSE_MPI_IO=$(USE_MPI_IO)
export USE_MPI_IO

